% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ea_spatial_class.R
\name{ea.subset.spatial}
\alias{ea.subset.spatial}
\title{Filter an \code{ea_spatial} Object by Attribute}
\usage{
ea.subset.spatial(x, column, value)
}
\arguments{
\item{x}{An \code{ea_spatial} object.}

\item{column}{\verb{[character(1)]} The name of the attribute column or layer to filter by.}

\item{value}{A value or vector of values to match in the specified column/layer.}
}
\value{
A new \code{ea_spatial} object containing only the matching features or cells.
}
\description{
A helper function to filter the features or cells of an \code{ea_spatial} object
based on the values in a specified attribute column or layer.
}
\details{
This masks the \code{data} slot of the \code{ea_spatial} object, setting the attributes
to \code{NA} for features or cells that do not match the specified value(s).
This is useful for subsetting spatial data based on specific criteria,
such as filtering by region or time. It is different than the ea.subset method for
ea_data which removes features that do not match the criteria.
}
\examples{
if (requireNamespace("sf", quietly = TRUE) && requireNamespace("dplyr", quietly = TRUE)) {
  pts <- list(sf::st_point(c(-63, 44)), sf::st_point(c(-66, 45)))
  sf_df <- sf::st_sf(
    temp = c(12, 13),
    region_id = c("A", "B"),
    geometry = sf::st_sfc(pts, crs = 4326)
  )
  obj <- ea_spatial(sf_df, "temp", "temp", "region", "time", "C")

  # Filter for a specific region_id
  ea.subset.spatial(obj, "region_id", "B")
}

}
