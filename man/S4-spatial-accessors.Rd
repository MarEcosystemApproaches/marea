% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ea_spatial_class.R
\name{[[,ea_spatial-method}
\alias{[[,ea_spatial-method}
\alias{[,ea_spatial,ANY,ANY,ANY-method}
\alias{[,ea_spatial-method}
\title{Extract or Access Parts of an ea_spatial Object}
\usage{
\S4method{[[}{ea_spatial}(x, i, j, ...)

\S4method{[}{ea_spatial,ANY,ANY,ANY}(x, i, j, ..., drop = FALSE)
}
\arguments{
\item{x}{An \code{ea_spatial} object.}

\item{i}{Row/feature indices (numeric, logical), or a spatial object (\code{sf},
\code{sfc}) to use for spatial subsetting.}

\item{j}{Ignored. A warning is issued if \code{j} is specified for \code{sf}/\code{stars}.}

\item{...}{Additional arguments passed to the underlying subset method.}

\item{drop}{Logical. Passed to the underlying subset method.}
}
\value{
The requested element. For \code{SpatRaster} layers, this returns the
raster values as a vector via \code{terra::values()}.

A new \code{ea_spatial} object with a subsetted \code{data} slot.
}
\description{
Provides access to metadata and data using the \code{[[} operator. This allows
for intuitive extraction of metadata fields, the full data object, or
specific columns/layers within the data object.

Subsets the \code{data} slot of an \code{ea_spatial} object using the \code{[} operator,
while preserving the object's structure and metadata.
}
\details{
This method is primarily intended for spatial or feature-based subsetting
(i.e., by row index or by another spatial object). Column subsetting (via \code{j})
is not supported for \code{sf} or \code{stars} objects to prevent accidental removal of
the required \code{value} or geometry columns.
}
\examples{
if (requireNamespace("sf", quietly = TRUE)) {
  # Create a sample sf object
  pts <- list(sf::st_point(c(-63, 44)), sf::st_point(c(-66, 45)))
  sf_df <- sf::st_sf(temp = c(12, 13), geometry = sf::st_sfc(pts, crs = 4326))
  obj <- ea_spatial(sf_df, "temp", "temp", "region", "time", "C")

  # Get a metadata field
  obj[["units"]]

  # Get the 'value' vector from the data
  obj[["value"]]
}
if (requireNamespace("sf", quietly = TRUE)) {
  pts <- list(sf::st_point(c(-63, 44)), sf::st_point(c(-66, 45)))
  sf_df <- sf::st_sf(temp = c(12, 13), geometry = sf::st_sfc(pts, crs = 4326))
  obj <- ea_spatial(sf_df, "temp", "temp", "region", "time", "C")

  # Subset the first feature
  obj[1, ]
}
}
